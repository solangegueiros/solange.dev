{"version":3,"file":"component---src-templates-event-template-js-ec1ef23a9522403744ca.js","mappings":"2OA2GA,MAjGkBA,IAA8D,IAA7D,KAAEC,EAAI,SAAEC,EAAUC,aAAa,SAAEC,GAAU,SAAEC,GAAUL,EACxE,MAAM,EAAEM,IAAMC,EAAAA,EAAAA,kBACRC,EAAQP,EAAKQ,KAEnBC,QAAQC,IAAI,YAAaP,GACzB,MAAMQ,EAAeN,EAAEF,GAEjBS,EAAQL,GAASA,EAAMK,MAAQL,EAAMK,MAAQP,EAAE,iBACrDI,QAAQC,IAAI,SAAUE,GAEtB,MAAMC,EAAQN,GAASA,EAAMM,MAAQN,EAAMM,MAAMC,MAAM,MAAQ,KAC3DD,GACFJ,QAAQC,IAAK,SAAUG,EAAO,KAAMA,EAAME,QAE5C,MAAMC,EAAUT,GAASA,EAAMS,QAAUT,EAAMS,QAAQF,MAAM,MAAQ,KAM/DG,GAFSV,GAASA,EAAMW,QAASX,EAAMW,OAAOJ,MAAM,MAE5CP,GAASA,EAAMU,MAAQV,EAAMU,MAAMH,MAAM,MAAQ,MAM/D,OACEK,EAAAA,cAACC,EAAAA,EAAM,CAACC,UAAWT,EAAOR,SAAUA,GAElCe,EAAAA,cAAA,WACGZ,EACCY,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,WACAA,EAAAA,cAAA,SAAIZ,EAAMe,KAAK,KAAGf,EAAMgB,KAAK,KAAGhB,EAAMiB,MAAM,KAAGb,GAC9CJ,EAAMkB,UAAaN,EAAAA,cAAAA,EAAAA,SAAA,KAAE,IAACA,EAAAA,cAAA,SAAId,EAAE,wBAAwB,IAAEE,EAAMkB,WAAc,KAAQ,KAClFlB,EAAMmB,YAAeP,EAAAA,cAAAA,EAAAA,SAAA,KAAE,IAACA,EAAAA,cAAA,SAAIZ,EAAMmB,aAAgB,KAAQ,KAE1DnB,EAAMM,MAASM,EAAAA,cAAAA,EAAAA,SAAA,KACdA,EAAAA,cAAA,UACGd,EAAE,SACDQ,EAAME,OAAS,EAAK,IAAM,IAE7BF,EAAMc,IAAI,CAACC,EAAKC,IAAWV,EAAAA,cAAAA,EAAAA,SAAA,KACxBA,EAAAA,cAAA,KACEW,KAAMF,EACNG,OAAO,SACPC,IAAI,sBACJC,MAAO,CAAEC,WAAY,UACrBtB,MAAOP,EAAE,YAETc,EAAAA,cAACgB,EAAAA,IAAS,CACRC,KAAK,MACLH,MAAO,CAAEI,YAAa,SAAUC,MAAO,MAAOC,cAAe,YAE9DlC,EAAE,0BAIH,GAGPW,EAAWG,EAAAA,cAAAA,EAAAA,SAAA,KACVA,EAAAA,cAAA,UACGd,EAAE,WACDW,EAAQD,OAAS,EAAK,IAAM,IAEhCI,EAAAA,cAAA,UACGH,EAAQW,IAAI,CAACC,EAAKC,IACjBV,EAAAA,cAAA,MAAIqB,IAAKX,GACPV,EAAAA,cAAA,KAAGW,KAAMF,EAAKG,OAAO,SAASC,IAAI,uBAAuBJ,OAIzD,GAEPX,EAASE,EAAAA,cAAAA,EAAAA,SAAA,KACRA,EAAAA,cAAA,UACGd,EAAE,UAELc,EAAAA,cAAA,UACGF,EAAMU,IAAI,CAACC,EAAKC,IACfV,EAAAA,cAAA,MAAIqB,IAAKX,GACPV,EAAAA,cAAA,KAAGW,KAAMF,EAAKG,OAAO,SAASC,IAAI,uBAAuBJ,OAIzD,IAIVT,EAAAA,cAAA,WAAMd,EAAE,qBASX,MAAMoC,EAAOC,IAAA,IAAAC,EAAAC,EAAA,IAAC,KAAE5C,GAAM0C,EAAA,OAC3BvB,EAAAA,cAAC0B,EAAAA,EAAG,CAACxB,UAA4B,QAAnBsB,EAAE3C,SAAU,QAAN4C,EAAJ5C,EAAMQ,YAAI,IAAAoC,OAAN,EAAJA,EAAYhC,aAAK,IAAA+B,EAAAA,EAAI,mB","sources":["webpack://solange.dev/./src/templates/event-template.js"],"sourcesContent":["import * as React from 'react'\r\nimport { graphql } from \"gatsby\"\r\nimport { useI18next, useTranslation } from 'gatsby-plugin-react-i18next'\r\nimport { FaYoutube } from 'react-icons/fa' // YouTube icon\r\n\r\nimport Layout from '../components/Layout'\r\nimport { SEO }  from \"../components/Seo\"\r\nimport Video from \"../components/video\"\r\n\r\n\r\nconst EventPage = ({ data, children, pageContext: { language }, location }) => {\r\n  const { t } = useTranslation();\r\n  const event = data.item\r\n\r\n  console.log(\"language:\", language)\r\n  const languageName = t(language)\r\n  \r\n  const title = event && event.title ? event.title : t(\"notTranslated\");\r\n  console.log(\"TITLE:\", title)\r\n\r\n  const video = event && event.video ? event.video.split('\\n') : null;\r\n  if (video)\r\n    console.log (\"video:\", video, \"\\n\", video.length)\r\n\r\n  const article = event && event.article ? event.article.split('\\n') : null;\r\n  // if (article)\r\n  //   console.log(\"ARTICLE:\", article, \"\\n\", article.length)\r\n\r\n  const slides = event && event.slides ? event.slides.split('\\n') : null;\r\n\r\n  const links = event && event.links ? event.links.split('\\n') : null;\r\n\r\n  /*\r\n    <Video videoURL={url} videoTitle={event.title} />\r\n  */\r\n\r\n  return (\r\n    <Layout pageTitle={title} location={location}>\r\n\r\n      <div>\r\n        {event ? (\r\n          <>\r\n            <hr />        \r\n            <p>{event.type}, {event.date}, {event.local}, {languageName}</p>\r\n            {event.organizer ? (<> <p>{t(\"eventsPage.organizer\")} {event.organizer}</p> </>) : null}\r\n            {event.description ? (<> <p>{event.description}</p> </>) : null}\r\n            \r\n            {event.video ? (<>\r\n              <h3>\r\n                {t(\"video\")}                \r\n                {(video.length > 1) ? \"s\" : \"\"}\r\n              </h3>\r\n              {video.map((url, index) => (<>\r\n                  <a\r\n                    href={url}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    style={{ marginLeft: '0.5rem' }}\r\n                    title={t(\"youTube\")}\r\n                    >\r\n                    <FaYoutube\r\n                      size=\"2em\"                    \r\n                      style={{ marginRight: '0.5rem', color: 'red', verticalAlign: 'middle' }}\r\n                    />\r\n                    {t(\"eventsPage.youtube\")}\r\n                  </a>\r\n                </>\r\n              ))}            \r\n            </>) : (\"\")}\r\n\r\n\r\n            {article ? (<>          \r\n              <h3>\r\n                {t(\"article\")}                \r\n                {(article.length > 1) ? \"s\" : \"\"}\r\n              </h3>\r\n              <ul>\r\n                {article.map((url, index) => (\r\n                  <li key={index}>\r\n                    <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{url}</a>\r\n                  </li>\r\n                ))}\r\n              </ul>           \r\n            </>) : (\"\")}\r\n\r\n            {links ? (<>\r\n              <h3>\r\n                {t(\"links\")}\r\n              </h3>\r\n              <ul>\r\n                {links.map((url, index) => (\r\n                  <li key={index}>\r\n                    <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{url}</a>\r\n                  </li>\r\n                ))}\r\n              </ul>           \r\n            </>) : (\"\")}\r\n\r\n          </>\r\n        ) : (\r\n          <div>{t(\"notTranslated\")}</div>\r\n        )}\r\n      </div>\r\n    </Layout>      \r\n  )    \r\n}\r\n\r\nexport default EventPage\r\n\r\nexport const Head = ({ data }) => (  \r\n  <SEO pageTitle={data?.item?.title ?? \"Not Translated\"} />\r\n)\r\n\r\nexport const query = graphql`\r\n  query ($language: String!, $slug: String!) {\r\n    locales: allLocale(filter: { language: { eq: $language } }) {\r\n      edges {\r\n        node {\r\n          ns\r\n          data\r\n          language\r\n        }\r\n      }\r\n    }\r\n    item(      \r\n      fields: {locale: {eq: $language} }, slug: {eq: $slug}\r\n    ) {\r\n      fields {\r\n        locale\r\n        slug\r\n      }      \r\n      article\r\n      date(formatString: \"DD MMMM, YYYY\")\r\n      category\r\n      description\r\n      id\r\n      language\r\n      layout\r\n      links\r\n      local\r\n      marketing      \r\n      organizer\r\n      photos\r\n      slides\r\n      slug\r\n      tags\r\n      title\r\n      type\r\n      video\r\n    }\r\n  }\r\n`;"],"names":["_ref","data","children","pageContext","language","location","t","useTranslation","event","item","console","log","languageName","title","video","split","length","article","links","slides","React","Layout","pageTitle","type","date","local","organizer","description","map","url","index","href","target","rel","style","marginLeft","FaYoutube","size","marginRight","color","verticalAlign","key","Head","_ref2","_data$item$title","_data$item","SEO"],"sourceRoot":""}