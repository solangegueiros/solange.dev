{"version":3,"file":"component---src-pages-events-js-506c9432f36ede64def0.js","mappings":"6MAqEA,UA1DmBA,IAAyB,IAAxB,KAAEC,EAAI,SAAEC,GAAUF,EAGpC,MAAM,EAAEG,IAAMC,EAAAA,EAAAA,kBACRC,EAAgBF,EAAE,qBAClB,SAAEG,IAAaC,EAAAA,EAAAA,cAEfC,EAAYP,EAAKO,UAIvB,OAHAC,QAAQC,IAAI,gBAAiBF,EAAUG,QAGlCH,GAAcA,EAAUI,OAAoC,IAA3BJ,EAAUI,MAAMD,OAWlDE,EAAAA,cAACC,EAAAA,EAAM,CAACC,UAAWV,EAAeH,SAAUA,GAC1CW,EAAAA,cAAA,SAAG,gBAAcP,EAASU,cAAc,aAAWR,EAAUS,YAC7DJ,EAAAA,cAAA,WAEAA,EAAAA,cAAA,UACGL,EAAUI,MAAMM,IAAKC,GACpBN,EAAAA,cAAA,MAAIO,IAAKD,EAAKE,IACZR,EAAAA,cAACS,EAAAA,KAAI,CAACC,GAAI,UAAUJ,EAAKK,QACvBX,EAAAA,cAAA,UAAKM,EAAKM,QAEZZ,EAAAA,cAAA,aACGM,EAAKO,YAAcP,EAAKQ,OACvBd,EAAAA,cAAA,KACEe,KAAMT,EAAKQ,MACXE,OAAO,SACPC,IAAI,sBACJC,MAAO,CAAEC,WAAY,UACrBP,MAAM,oBAENZ,EAAAA,cAACoB,EAAAA,IAAS,CACRC,KAAK,MACLH,MAAO,CAAEI,YAAa,SAAUC,MAAO,MAAOC,cAAe,aAIlElB,EAAKmB,KAAK,KAAGnB,EAAKoB,KAAK,MAAIpB,EAAKqB,WAlC3C3B,EAAAA,cAACC,EAAAA,EAAM,CAACC,UAAWV,EAAeH,SAAUA,GAC1CW,EAAAA,cAAA,SAAG,gBAAcP,EAASU,eAC1BH,EAAAA,cAAA,SAAIV,EAAE,2BACNU,EAAAA,cAAA,SAAIV,EAAE,oBA4CP,MAAMsC,EAAOA,IAClB5B,EAAAA,cAAC6B,EAAAA,EAAG,CAAC3B,UAhEW,U","sources":["webpack://solange.dev/./src/pages/events.js"],"sourcesContent":["import * as React from 'react'\r\nimport { FaYoutube } from 'react-icons/fa' // YouTube icon\r\nimport { graphql } from 'gatsby'\r\nimport { Link, useI18next, useTranslation } from 'gatsby-plugin-react-i18next'\r\n\r\nimport Layout from '../components/Layout'\r\nimport { SEO }  from \"../components/Seo\"\r\n\r\nconst PageTitle = \"Events\"\r\n// console.log(\"PageTitle: \", PageTitle);\r\n\r\nconst EventsPage = ({ data, location }) => {\r\n  // console.log(\"EventsPage location\\n\", JSON.stringify(location, null, 2));\r\n\r\n  const { t } = useTranslation()\r\n  const PageLocalized = t('eventsPage.title')\r\n  const { language } = useI18next()\r\n\r\n  const eventList = data.eventList;\r\n  console.log(\"Event List \\n\", eventList.length);  \r\n\r\n  // No events found\r\n  if (!eventList || !eventList.nodes || eventList.nodes.length === 0) {\r\n    return (\r\n      <Layout pageTitle={PageLocalized} location={location}>        \r\n        <p>üåç Language: {language.toUpperCase()}</p>\r\n        <p>{t('eventsPage.description')}</p>\r\n        <p>{t(\"noEventsFound\")}</p>\r\n      </Layout>\r\n    )\r\n  }\r\n  else {   \r\n    return (\r\n      <Layout pageTitle={PageLocalized} location={location}>        \r\n        <p>üåç Language: {language.toUpperCase()} - Total: {eventList.totalCount}</p>\r\n        <br/>\r\n\r\n        <ul>\r\n          {eventList.nodes.map((item) => (\r\n            <li key={item.id}>\r\n              <Link to={`/events${item.slug}`}>\r\n                <h4>{item.title}</h4>\r\n              </Link>\r\n              <small>                \r\n                {item.hasYouTube && item.video && (\r\n                  <a\r\n                    href={item.video}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    style={{ marginLeft: '0.5rem' }}\r\n                    title=\"Watch on YouTube\"\r\n                    >\r\n                    <FaYoutube\r\n                      size=\"2em\"                    \r\n                      style={{ marginRight: '0.5rem', color: 'red', verticalAlign: 'middle' }}\r\n                    />\r\n                  </a>\r\n                )}                \r\n                {item.type}, {item.date} - {item.local}              \r\n              </small>\r\n            </li>\r\n          ))}\r\n        </ul>        \r\n      </Layout>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default EventsPage\r\n\r\nexport const Head = () => (\r\n  <SEO pageTitle={PageTitle} />\r\n)\r\n\r\n// This is mandatory for every page using useTranslation() or anything from gatsby-plugin-react-i18next.\r\nexport const query = graphql`\r\n  query($language: String!) {\r\n    locales: allLocale(filter: {language: {eq: $language}}) {\r\n      edges {\r\n        node {\r\n          ns\r\n          data\r\n          language\r\n        }\r\n      }\r\n    }\r\n    eventList: allItem(\r\n      filter: {layout: {eq: \"event\"}, fields: {locale: {eq: $language}}}\r\n      sort: {date: DESC}\r\n    ) {\r\n      totalCount\r\n      nodes {\r\n        date(formatString: \"DD MMMM, YYYY\")\r\n        id\r\n        local\r\n        slug\r\n        title\r\n        type\r\n        video\r\n        hasYouTube\r\n        youtubeId\r\n      }\r\n    }      \r\n  }\r\n`;\r\n\r\n"],"names":["_ref","data","location","t","useTranslation","PageLocalized","language","useI18next","eventList","console","log","length","nodes","React","Layout","pageTitle","toUpperCase","totalCount","map","item","key","id","Link","to","slug","title","hasYouTube","video","href","target","rel","style","marginLeft","FaYoutube","size","marginRight","color","verticalAlign","type","date","local","Head","SEO"],"sourceRoot":""}