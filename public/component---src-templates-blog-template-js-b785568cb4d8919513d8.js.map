{"version":3,"file":"component---src-templates-blog-template-js-b785568cb4d8919513d8.js","mappings":"+MAkEA,UAjCiBA,IAA8D,IAA7D,KAAEC,EAAI,SAAEC,EAAUC,aAAa,SAAEC,GAAU,SAAEC,GAAUL,EACvE,MAAM,EAAEM,IAAMC,EAAAA,EAAAA,kBAERC,EAAOP,EAAKQ,IAClB,OAAKD,EAWDE,EAAAA,cAACC,EAAAA,EAAM,CAACC,UAAWJ,EAAKK,YAAYC,MAAOT,SAAUA,GACnDK,EAAAA,cAAA,WACAA,EAAAA,cAAA,SACGJ,EAAE,mBACFS,KAAKC,eAAeZ,EACnB,CAAEa,KAAM,UAAWC,MAAO,OAAQC,IAAK,YACvCC,OAAO,IAAIC,KAAKb,EAAKK,YAAYS,MAAMC,YAG3Cb,EAAAA,cAACc,EAAAA,GAAa,KACXhB,EAAKiB,OAnBVf,EAAAA,cAACC,EAAAA,EAAM,CAACC,UAAWN,EAAE,uBAAwBD,SAAUA,GACrDK,EAAAA,cAAA,SAAIJ,EAAE,4BA4BP,MAAMoB,EAAOC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,IAAC,KAAE7B,GAAM0B,EAAA,OAC3BjB,EAAAA,cAACqB,EAAAA,EAAG,CAACnB,UAAwC,QAA/BgB,EAAE3B,SAAS,QAAL4B,EAAJ5B,EAAMQ,WAAG,IAAAoB,GAAa,QAAbC,EAATD,EAAWhB,mBAAW,IAAAiB,OAAlB,EAAJA,EAAwBhB,aAAK,IAAAc,EAAAA,EAAI,mB","sources":["webpack://solange.dev/./src/templates/blog-template.js"],"sourcesContent":["import * as React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport { useTranslation } from 'gatsby-plugin-react-i18next'\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nimport Layout from '../components/Layout'\r\nimport { SEO }  from \"../components/Seo\"\r\n\r\n\r\nexport const query = graphql`\r\n  query Post($language: String!, $slug: String!) {\r\n    locales: allLocale(filter: { language: { eq: $language } }) {\r\n      edges {\r\n        node {\r\n          ns\r\n          data\r\n          language\r\n        }\r\n      }\r\n    }\r\n    mdx(\r\n      frontmatter: { slug: { eq: $slug } }\r\n      fields: { locale: { eq: $language } }\r\n    ) {\r\n      body\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        title\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst BlogPost = ({ data, children, pageContext: { language }, location }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const post = data.mdx\r\n  if (!post) {\r\n    return (\r\n      <Layout pageTitle={t('notTranslated.title')} location={location}>\r\n        <p>{t('notTranslated.message')}</p>\r\n      </Layout>\r\n    )\r\n  }\r\n  else {\r\n    //console.log(\"body \", `${post.body}`);\r\n\r\n    return (\r\n      <Layout pageTitle={post.frontmatter.title} location={location}>\r\n        <hr />        \r\n        <p>\r\n          {t('blogPage.posted')}\r\n          {Intl.DateTimeFormat(language,\r\n            { year: 'numeric', month: 'long', day: '2-digit' } //, timeZone: 'UTC'             \r\n          ).format(new Date(post.frontmatter.date).getTime())}\r\n        </p>\r\n        \r\n        <ReactMarkdown>\r\n          {post.body}\r\n        </ReactMarkdown>            \r\n      </Layout>\r\n      \r\n    )    \r\n  }\r\n}\r\n\r\nexport default BlogPost\r\n\r\nexport const Head = ({ data }) => (  \r\n  <SEO pageTitle={data?.mdx?.frontmatter?.title ?? \"Not Translated\"} />\r\n)\r\n\r\n\r\n"],"names":["_ref","data","children","pageContext","language","location","t","useTranslation","post","mdx","React","Layout","pageTitle","frontmatter","title","Intl","DateTimeFormat","year","month","day","format","Date","date","getTime","ReactMarkdown","body","Head","_ref2","_data$mdx$frontmatter","_data$mdx","_data$mdx$frontmatter2","SEO"],"sourceRoot":""}