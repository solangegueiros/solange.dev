{"version":3,"file":"component---src-pages-about-js-09ee4f19af5783f480ed.js","mappings":"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","sources":["webpack://solange.dev/./node_modules/gatsby-plugin-react-i18next/dist/useI18next.js","webpack://solange.dev/../src/image-utils.ts","webpack://solange.dev/../src/components/hooks.ts","webpack://solange.dev/../src/components/layout-wrapper.tsx","webpack://solange.dev/../src/components/picture.tsx","webpack://solange.dev/../src/components/placeholder.tsx","webpack://solange.dev/../src/components/main-image.tsx","webpack://solange.dev/../src/components/gatsby-image.server.tsx","webpack://solange.dev/../src/components/gatsby-image.browser.tsx","webpack://solange.dev/../src/components/static-image.server.tsx","webpack://solange.dev/../src/components/static-image.tsx","webpack://solange.dev/./node_modules/camelcase/index.js","webpack://solange.dev/./src/utils/folderUtils.js","webpack://solange.dev/./node_modules/gatsby-plugin-react-i18next/dist/Link.js","webpack://solange.dev/./src/components/LanguageSwitcher.jsx","webpack://solange.dev/./src/images/icon.png","webpack://solange.dev/./src/components/Menu.jsx","webpack://solange.dev/./src/components/SidebarTree.jsx","webpack://solange.dev/./src/components/DocsSidebar.jsx","webpack://solange.dev/./src/components/BlogSidebar.jsx","webpack://solange.dev/./src/components/Sidebar.jsx","webpack://solange.dev/./src/components/Layout.jsx","webpack://solange.dev/./node_modules/gatsby-plugin-react-i18next/index.js","webpack://solange.dev/./src/hooks/use-site-metadata.jsx","webpack://solange.dev/./src/components/Seo.jsx","webpack://solange.dev/./node_modules/gatsby-plugin-react-i18next/dist/index.js","webpack://solange.dev/./src/pages/about.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports.useI18next = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _reactI18next = require(\"react-i18next\");\nvar _react = require(\"react\");\nvar _gatsby = require(\"gatsby\");\nvar _i18nextContext = require(\"./i18nextContext\");\nvar _types = require(\"./types\");\nvar useI18next = function useI18next(ns, options) {\n  var _useTranslation = (0, _reactI18next.useTranslation)(ns, options),\n    i18n = _useTranslation.i18n,\n    t = _useTranslation.t,\n    ready = _useTranslation.ready;\n  var context = (0, _react.useContext)(_i18nextContext.I18nextContext);\n  var routed = context.routed,\n    defaultLanguage = context.defaultLanguage,\n    generateDefaultLanguagePage = context.generateDefaultLanguagePage;\n  var getLanguagePath = function getLanguagePath(language) {\n    return generateDefaultLanguagePage || language !== defaultLanguage ? \"/\" + language : '';\n  };\n  var removePrefix = function removePrefix(pathname) {\n    var base = typeof __BASE_PATH__ !== \"undefined\" ? __BASE_PATH__ : __PATH_PREFIX__;\n    if (base && pathname.indexOf(base) === 0) {\n      pathname = pathname.slice(base.length);\n    }\n    return pathname;\n  };\n  var removeLocalePart = function removeLocalePart(pathname) {\n    if (!routed) return pathname;\n    var i = pathname.indexOf(\"/\", 1);\n    return pathname.substring(i);\n  };\n  var navigate = function navigate(to, options) {\n    var languagePath = getLanguagePath(context.language);\n    var link = routed ? \"\" + languagePath + to : \"\" + to;\n    return (0, _gatsby.navigate)(link, options);\n  };\n  var changeLanguage = function changeLanguage(language, to, options) {\n    var languagePath = getLanguagePath(language);\n    var pathname = to || removeLocalePart(removePrefix(window.location.pathname));\n    var link = \"\" + languagePath + pathname + window.location.search;\n    localStorage.setItem(_types.LANGUAGE_KEY, language);\n    return (0, _gatsby.navigate)(link, options);\n  };\n  return (0, _extends2.default)({}, context, {\n    i18n: i18n,\n    t: t,\n    ready: ready,\n    navigate: navigate,\n    changeLanguage: changeLanguage\n  });\n};\nexports.useI18next = useI18next;","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","function groupDocsBySubfolder(nodes) {\r\n  const tree = {};\r\n\r\n  nodes.forEach(node => {\r\n    const { slug, title } = node.frontmatter;\r\n    const subfolder = node.fields.subfolder;\r\n\r\n    if (!subfolder) {\r\n      tree[slug] = { title, slug };\r\n    } else {\r\n      if (!tree[subfolder]) {\r\n        tree[subfolder] = { children: [] };\r\n      }\r\n      tree[subfolder].children.push({ title, slug });\r\n    }\r\n  });\r\n\r\n  return tree;\r\n}\r\n\r\n\r\nfunction formatFolderName(name) {\r\n  return name.replace(/-/g, \" - \");\r\n}\r\n\r\nfunction getSlugFromPath(filePath, basePath) {\r\n  const parts = filePath.split(\"/docs/\")[1].split(\"/\");\r\n  const slugParts = parts.map(p => p.replace(/^\\d+-/, \"\").replace(/\\.mdx$/, \"\"));\r\n  return `${basePath}/${slugParts.join(\"/\")}`;\r\n}\r\n\r\n\r\nmodule.exports = {\r\n  groupDocsBySubfolder,\r\n  formatFolderName,\r\n  getSlugFromPath\r\n};\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports.Link = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _i18nextContext = require(\"./i18nextContext\");\nvar _gatsby = require(\"gatsby\");\nvar _types = require(\"./types\");\nvar _excluded = [\"language\", \"to\", \"onClick\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar Link = /*#__PURE__*/_react.default.forwardRef(function (_ref, ref) {\n  var language = _ref.language,\n    to = _ref.to,\n    _onClick = _ref.onClick,\n    rest = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);\n  var context = (0, _react.useContext)(_i18nextContext.I18nextContext);\n  var urlLanguage = language || context.language;\n  var getLanguagePath = function getLanguagePath(language) {\n    return context.generateDefaultLanguagePage || language !== context.defaultLanguage ? \"/\" + language : '';\n  };\n  var link = \"\" + getLanguagePath(urlLanguage) + to;\n  return (\n    /*#__PURE__*/\n    // @ts-ignore\n    _react.default.createElement(_gatsby.Link, (0, _extends2.default)({}, rest, {\n      to: link,\n      innerRef: ref,\n      hrefLang: urlLanguage,\n      onClick: function onClick(e) {\n        if (language) {\n          localStorage.setItem(_types.LANGUAGE_KEY, language);\n        }\n        if (_onClick) {\n          _onClick(e);\n        }\n      }\n    }))\n  );\n});\nexports.Link = Link;","// src/components/LanguageSwitcher.js\r\nimport React from 'react'\r\nimport { useI18next, useTranslation } from 'gatsby-plugin-react-i18next'\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\n\r\nconst FLAGS = {\r\n  en: \"/images/flags/EN.png\",\r\n  es: \"/images/flags/ES.png\",\r\n  pt: \"/images/flags/BR.png\",\r\n};\r\n\r\nconst LanguageSwitcher = () => {\r\n  const { languages, changeLanguage, language } = useI18next()\r\n  const { t } = useTranslation()\r\n  //console.log(\"\\n  languages\", JSON.stringify(languages, null, 2));\r\n  //console.log(\"\\n  language\", language);\r\n\r\n  //      <h3 className=\"language-title\">{t('language')} : {language}</h3>\r\n\r\n  return (\r\n    <div className=\"language-switcher\">\r\n      <div className=\"language-buttons\">\r\n        {languages.map(lang => (\r\n          <button\r\n            key={lang}\r\n            onClick={() => changeLanguage(lang)}\r\n            className={`language-button ${lang === language ? 'language-button--active' : ''}`}\r\n          >\r\n            <img\r\n              src={FLAGS[lang]}\r\n              alt={lang}\r\n              className=\"language-flag\"\r\n              title={lang.toUpperCase()}\r\n            />\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LanguageSwitcher\r\n","export default __webpack_public_path__ + \"static/icon-98bed379b4ec2d8879f8d18db3a2c0c3.png\";","import * as React from 'react'\r\nimport { Link, useStaticQuery, graphql } from 'gatsby'\r\nimport { useTranslation } from 'gatsby-plugin-react-i18next'\r\nimport LanguageSwitcher from './LanguageSwitcher'\r\nimport icon from '../images/icon.png'\r\n\r\nconst Menu = () => {\r\n  const { t } = useTranslation()\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  //console.log(\"Layout data \\n\", JSON.stringify(data, null, 2));    \r\n  \r\n  return (\r\n      <div className=\"menu\">\r\n        <Link to=\"/\" className=\"menu-title\">\r\n          <img src={icon} alt=\"Solange.Dev\" className=\"logoIcon\" />\r\n          {data.site.siteMetadata.title }\r\n        </Link>         \r\n        <nav>\r\n          <ul className=\"menu-links\">\r\n              <li className=\"menu-link-item\">\r\n                <Link to=\"/\" className=\"nav-link-text\">\r\n                    {t('menu.home')}\r\n                </Link>\r\n              </li>\r\n              <li className=\"menu-link-item\">\r\n                <Link to=\"/events\" className=\"nav-link-text\">\r\n                    {t('menu.events')}\r\n                </Link>\r\n              </li>\r\n              <li className=\"menu-link-item\">\r\n                <Link to=\"/projects\" className=\"nav-link-text\">\r\n                    {t('menu.projects')}\r\n                </Link>\r\n              </li>\r\n              <li className=\"menu-link-item\">\r\n                <Link to=\"/about\" className=\"nav-link-text\">\r\n                    {t('menu.about')}\r\n                </Link>\r\n              </li>\r\n          </ul>\r\n        </nav>\r\n        <div>\r\n          <LanguageSwitcher />\r\n        </div>        \r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default Menu\r\n\r\n  /*\r\n              <li className=\"menu-link-item\">\r\n                <Link to=\"/blog\" className=\"nav-link-text\">\r\n                    {t('menu.blog')}\r\n                </Link>\r\n              </li>\r\n              <li className=\"menu-link-item\">\r\n                <Link to=\"/docs\" className=\"nav-link-text\">\r\n                    {t('menu.docs')}\r\n                </Link>\r\n              </li>\r\n\r\n  */","import React, { useState } from \"react\";\r\nimport { Link, useI18next, useTranslation } from 'gatsby-plugin-react-i18next'\r\nimport { useSidebar } from \"../context/SidebarContext\";\r\nimport { groupDocsBySubfolder, formatFolderName } from \"../utils/folderUtils\";\r\n\r\n\r\nconst SidebarTree = ({ nodes, basePath = \"/docs\" }) => {\r\n  const { t } = useTranslation()\r\n  const { language } = useI18next()\r\n  //console.log(`language`, language)\r\n\r\n  const { openFolders, toggleFolder } = useSidebar();\r\n \r\n\r\n  //const docsByLanguage = nodes.filter(doc => doc.fields.locale === language);\r\n  //console.log(\"docsByLanguage \\n\", JSON.stringify(docsByLanguage, null, 2));\r\n  const tree = groupDocsBySubfolder(nodes);   \r\n  //console.log(\"tree \\n\", JSON.stringify(tree, null, 2));\r\n  \r\n\r\n  // Separate top-level and foldered docs\r\n  const topLevelDocs = Object.entries(tree).filter(([_, v]) => !v.children);\r\n  const folderGroups = Object.entries(tree)\r\n  .filter(([_, v]) => v.children)\r\n  .sort(([a], [b]) => parseInt(a) - parseInt(b));\r\n  // console.log(\"\\n tree \\n\", JSON.stringify(tree, null, 2));\r\n  // console.log(\"\\n topLevelDocs \\n\", JSON.stringify(topLevelDocs, null, 2));\r\n  // console.log(\"\\n folderGroups \\n\", JSON.stringify(folderGroups, null, 2));\r\n\r\n\r\n  return (\r\n    <ul className=\"sidebar__list\">\r\n      {/* Top-level docs first */}\r\n      {topLevelDocs.map(([_, doc]) => (\r\n        <li key={doc.slug}>\r\n          <Link to={`${basePath}/${doc.slug}`} className=\"sidebar__link\">\r\n            {doc.title}\r\n          </Link>\r\n        </li>\r\n      ))}\r\n\r\n      {/* Then folder groups with toggle */}\r\n      {folderGroups.map(([folder, group]) => {\r\n        const isOpen = openFolders[folder];\r\n        return (\r\n          <li key={folder}>\r\n            <button\r\n              onClick={() => toggleFolder(folder)}\r\n              className=\"sidebar__folder-toggle\"\r\n            >\r\n              {isOpen ? \"▼\" : \"►\"} {formatFolderName(folder)}\r\n            </button>\r\n            {isOpen && (\r\n              <ul className=\"sidebar__list\">\r\n                {group.children.map(child => (\r\n                  <li key={child.slug}>\r\n                    <Link to={`${basePath}/${folder}/${child.slug}`} className=\"sidebar__link\">\r\n                      {child.title}\r\n                    </Link>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SidebarTree;\r\n","import React from 'react'\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\nimport { Link, useI18next, useTranslation } from 'gatsby-plugin-react-i18next'\r\n\r\nimport SidebarTree from './SidebarTree'\r\n\r\nconst DocsSidebar = () => {\r\n  const { t } = useTranslation()\r\n  const { language } = useI18next()\r\n  //console.log(`language`, language)\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      docs: allMdx(\r\n        sort: { frontmatter: { order: ASC } }\r\n        filter: {           \r\n          internal: {contentFilePath: {regex: \"/docs/\"}}\r\n        }\r\n      ) {\r\n          nodes {\r\n            id\r\n            frontmatter {            \r\n              slug\r\n              title\r\n              order\r\n            }\r\n            fields {\r\n              locale\r\n              subfolder\r\n            }             \r\n          }\r\n        }\r\n    }\r\n  `)\r\n  //console.log(\"docs \\n\", JSON.stringify(data.docs, null, 2));  \r\n  const { nodes } = data.docs;  \r\n  const nodesByLanguage = nodes.filter(node => node.fields.locale === language);\r\n  //console.log(\"docsByLanguage \\n\", JSON.stringify(docsByLanguage, null, 2));\r\n\r\n  return (\r\n    <aside className=\"sidebar\">\r\n      \r\n      <br/>\r\n      \r\n      <h2 className=\"sidebar__title\">{t('docs')}</h2>\r\n      <nav className=\"sidebar__nav\">\r\n          <SidebarTree nodes={nodesByLanguage}  basePath=\"/docs\" />\r\n      </nav>\r\n    </aside>\r\n  )  \r\n\r\n}\r\n\r\nexport default DocsSidebar","import React from 'react'\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\nimport { Link, useI18next, useTranslation } from 'gatsby-plugin-react-i18next'\r\n\r\nimport SidebarTree from './SidebarTree'\r\n\r\nconst BlogSidebar = () => {\r\n  const { t } = useTranslation()\r\n  const { language } = useI18next()\r\n  //console.log(`language`, language)  \r\n\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      blogs: allMdx(\r\n        sort: { frontmatter: { date: DESC } }\r\n        filter: { \r\n          internal: {contentFilePath: {regex: \"/blog/\"}}\r\n        }\r\n      ) {\r\n          nodes {\r\n            id\r\n            frontmatter {\r\n              slug\r\n              title\r\n              date(formatString: \"MMMM DD, YYYY\")\r\n            }\r\n            fields {\r\n              locale\r\n              subfolder\r\n            }              \r\n          }\r\n        }\r\n    }\r\n  `)\r\n  //console.log(\"blogs \\n\", JSON.stringify(data.blogs, null, 2));  \r\n  const { nodes } = data.blogs; \r\n  const nodesByLanguage = nodes.filter(node => node.fields.locale === language);\r\n  //console.log(\"docsByLanguage \\n\", JSON.stringify(docsByLanguage, null, 2));\r\n\r\n  return (\r\n    <aside className=\"sidebar\">\r\n      \r\n      <br/>\r\n      \r\n      <h2 className=\"sidebar__title\">{t('blog')}</h2>\r\n      <nav className=\"sidebar__nav\">\r\n          <SidebarTree nodes={nodesByLanguage}  basePath=\"/blog\" />\r\n      </nav>\r\n    </aside>\r\n  ) \r\n\r\n}\r\n\r\nexport default BlogSidebar\r\n","// src/components/Sidebar.jsx\r\nimport * as React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport { useStaticQuery } from 'gatsby'\r\nimport { Link, useI18next, useTranslation } from 'gatsby-plugin-react-i18next'\r\n\r\nimport SidebarTree from './SidebarTree'\r\nimport DocsSidebar from './DocsSidebar'\r\nimport BlogSidebar from './BlogSidebar'\r\n\r\nconst Sidebar = ({ location }) => {\r\n  const { t } = useTranslation()\r\n  const { language } = useI18next()\r\n  //console.log(`language`, language)\r\n\r\n\r\n  //console.log(\"Sidebar location\\n\", JSON.stringify(location, null, 2));\r\n  const path = location?.pathname || ''\r\n  const isDocs = path.includes('/docs/')\r\n  const isBlog = path.includes('/blog/')\r\n  //const isDocs = path.match(/^\\/(?:[a-z]{2}\\/)?docs(?:\\/|$)/)\r\n  //console.log(`isDocs: ${isDocs} \\t isBlog: ${isBlog}`)\r\n\r\n/*\r\n          {isDocs && <DocsSidebar />}\r\n          {isBlog && <BlogSidebar />}\r\n\r\n*/\r\n\r\n  return (\r\n    <>\r\n      {isDocs && <DocsSidebar />}\r\n      {isBlog && <BlogSidebar />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Sidebar","//src/components/Layout.jsx\r\nimport React, { useState } from 'react'\r\n\r\nimport Menu from './Menu'\r\nimport Sidebar from './Sidebar'\r\n\r\n\r\nconst Layout = ({ children, pageTitle, location, data }) => {\r\n  //console.log(\"Layout location\\n\", JSON.stringify(location, null, 2));\r\n  \r\n  const [isSidebarOpen, setSidebarOpen] = useState(false)\r\n  const toggleSidebar = () => setSidebarOpen(!isSidebarOpen)\r\n\r\n  //<h1 >{t(pageTitle)}</h1>\r\n  return (\r\n    <div className=\"layout\">\r\n      <Menu />\r\n      <div className=\"layout-body\">\r\n        <button className=\"sidebar-toggle\" onClick={toggleSidebar}>\r\n          ☰\r\n        </button>\r\n        <Sidebar className={isSidebarOpen ? 'open' : ''} location={location} />\r\n\r\n        <main className=\"main-content\">          \r\n          <h1>{pageTitle}</h1>\r\n          {children}\r\n        </main>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","module.exports = require('./dist');\n","import { graphql, useStaticQuery } from \"gatsby\"\r\n\r\nexport const useSiteMetadata = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          description\r\n          twitterUsername\r\n          image\r\n          siteUrl\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  //console.log(\"siteMetadata \\n\", data.siteMetadata);\r\n\r\n  return data.site.siteMetadata\r\n}","import React from \"react\"\r\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\"\r\n\r\n//Named export\r\nexport const SEO = ({ pageTitle, pageDescription, pathname, children }) => {\r\n  const { title: defaultTitle, description: defaultDescription, image, siteUrl, twitterUsername } = useSiteMetadata()\r\n\r\n  const seo = {\r\n    title: pageTitle ? `${pageTitle} | ${defaultTitle}` : defaultTitle,\r\n    description: pageDescription || defaultDescription,\r\n    image: `${siteUrl}${image}`,\r\n    url: `${siteUrl}${pathname || ``}`,\r\n    twitterUsername,\r\n  }\r\n  console.log(\"SEO data:\", JSON.stringify(seo, null, 2))\r\n\r\n  return (\r\n    <>\r\n      <title>{seo.title}</title>\r\n      <meta name=\"description\" content={seo.description} />\r\n      <meta name=\"image\" content={seo.image} />\r\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n      <meta name=\"twitter:title\" content={seo.title} />\r\n      <meta name=\"twitter:url\" content={seo.url} />\r\n      <meta name=\"twitter:description\" content={seo.description} />\r\n      <meta name=\"twitter:image\" content={seo.image} />\r\n      <meta name=\"twitter:creator\" content={seo.twitterUsername} />\r\n      <link rel=\"icon\" type=\"image/png\" href={seo.image} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n","\"use strict\";\n\nexports.__esModule = true;\nvar _reactI18next = require(\"react-i18next\");\nObject.keys(_reactI18next).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _reactI18next[key]) return;\n  exports[key] = _reactI18next[key];\n});\nvar _i18nextContext = require(\"./i18nextContext\");\nObject.keys(_i18nextContext).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _i18nextContext[key]) return;\n  exports[key] = _i18nextContext[key];\n});\nvar _useI18next = require(\"./useI18next\");\nObject.keys(_useI18next).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _useI18next[key]) return;\n  exports[key] = _useI18next[key];\n});\nvar _Link = require(\"./Link\");\nObject.keys(_Link).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _Link[key]) return;\n  exports[key] = _Link[key];\n});","import * as React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport { StaticImage } from 'gatsby-plugin-image'\r\nimport { useTranslation } from 'gatsby-plugin-react-i18next'\r\n\r\nimport Layout from '../components/Layout'\r\nimport { SEO }  from \"../components/Seo\"\r\n\r\nconst PageTitle = \"About Me\"\r\n\r\nconst AboutPage = ({ location }) => {\r\n  const { t } = useTranslation()\r\n  const PageLocalized = t('aboutPage.title')\r\n\r\n  return (\r\n    <Layout pageTitle={PageLocalized} location={location}>\r\n      <p>{t('aboutPage.description')}</p>\r\n\r\n      <h2>\r\n        <b>Sol - Solange Gueiros</b>        \r\n      </h2>\r\n      <br/>      \r\n      <StaticImage width={200}\r\n        alt=\"Solange Gueiros\"\r\n        src=\"../images/SolangeGueiros-2021-12-Rosto.jpg\"\r\n      />\r\n      <h3>Mini bio</h3>\r\n      <p>\r\n        <b>{t(\"aboutPage.miniBioTitle\")}</b>\r\n        <br/>\r\n      </p>\r\n      <p>\r\n        {t(\"aboutPage.miniBioContent\")}\r\n        <br/>\r\n      </p>\r\n      <p>\r\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/solangegueiros\" className={\"menu-link-text\"}>\r\n          Twitter\r\n        </a>        \r\n        <br/>\r\n      </p>\r\n      <p>\r\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/solangegueiros/\" className={\"menu-link-text\"}>\r\n          Linkedin\r\n        </a>        \r\n        <br/>\r\n      </p>      \r\n      <h3>\r\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://photos.app.goo.gl/S64866GpCHbvhJk86\" className={\"menu-link-text\"}>\r\n          {t(\"aboutPage.profilePictures\")}\r\n        </a>\r\n      </h3>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default AboutPage\r\n\r\n\r\nexport const Head = () => (\r\n  <>\r\n    <SEO pageTitle={PageTitle} pageDescription=\"About me\" />\r\n  </>\r\n)\r\n\r\n\r\n// This is mandatory for every page using useTranslation() or anything from gatsby-plugin-react-i18next.\r\nexport const query = graphql`\r\n  query($language: String!) {\r\n    locales: allLocale(filter: { language: { eq: $language } }) {\r\n      edges {\r\n        node {\r\n          ns\r\n          data\r\n          language\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;"],"names":["_interopRequireDefault","require","exports","__esModule","useI18next","_extends2","_reactI18next","_react","_gatsby","_i18nextContext","_types","ns","options","_useTranslation","useTranslation","i18n","t","ready","context","useContext","I18nextContext","routed","defaultLanguage","generateDefaultLanguagePage","getLanguagePath","language","default","navigate","to","languagePath","link","changeLanguage","pathname","i","indexOf","substring","removeLocalePart","window","location","search","localStorage","setItem","LANGUAGE_KEY","W","hasNativeLazyLoadSupport","HTMLImageElement","prototype","z","e","a","s","width","height","className","style","P","h","loading","shouldLoad","opacity","A","r","n","o","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","d","transition","H","F","_ref5","layout","paddingTop","maxWidth","display","alt","role","src","G","children","u","V","B","U","srcSet","decoding","Y","fallback","sources","sizes","length","map","_ref6","media","type","key","X","propTypes","isRequired","displayName","J","Z","Error","K","Q","ee","te","replace","ae","_len","arguments","Array","_key","c","apply","concat","ie","image","se","re","ne","Set","oe","le","de","as","class","g","onStartLoad","p","onLoad","m","onError","f","w","y","b","v","E","k","S","M","N","$","JSON","stringify","images","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ce","he","ue","__imageData","__error","console","warn","ge","imgClassName","imgStyle","placeholder","pe","_len2","_key2","me","fe","we","UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","x","trim","filter","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","test","slice","preserveCamelCase","lastIndex","m1","charAt","_","identifier","postProcess","module","groupDocsBySubfolder","nodes","tree","forEach","node","slug","title","frontmatter","subfolder","fields","push","formatFolderName","name","getSlugFromPath","filePath","basePath","split","Link","_objectWithoutPropertiesLoose2","obj","nodeInterop","cache","_getRequireWildcardCache","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","hasOwnProperty","call","desc","set","_interopRequireWildcard","_excluded","WeakMap","cacheBabelInterop","cacheNodeInterop","forwardRef","_ref","_onClick","onClick","rest","urlLanguage","createElement","innerRef","hrefLang","FLAGS","en","es","pt","LanguageSwitcher","languages","React","lang","Menu","data","useStaticQuery","icon","site","siteMetadata","openFolders","toggleFolder","useSidebar","topLevelDocs","entries","_ref2","folderGroups","_ref3","sort","_ref4","parseInt","doc","folder","group","isOpen","child","DocsSidebar","docs","nodesByLanguage","SidebarTree","BlogSidebar","blogs","path","isDocs","includes","isBlog","pageTitle","isSidebarOpen","setSidebarOpen","useState","toggleSidebar","Sidebar","SEO","pageDescription","defaultTitle","description","defaultDescription","siteUrl","twitterUsername","seo","url","log","content","rel","href","keys","_useI18next","_Link","PageLocalized","Layout","StaticImage","target","Head"],"sourceRoot":""}