{"version":3,"file":"component---src-pages-index-js-3869f6e3ece0df38b9aa.js","mappings":"iJAoCA,IAhCY,SAAC,GAAsC,IAApCA,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACzBC,GAASC,EAAAA,EAAAA,IAAe,YAAxBD,KAcFE,EAAkBL,GAAeG,EAAKG,aAAaN,YAEzD,OACE,gBAAC,IAAD,CAAQC,MAAOA,EAAOM,cAAa,QAAUJ,EAAKG,aAAaL,OAC7D,wBAAMO,KAAK,cAAcC,QAASJ,IAClC,wBAAMG,KAAK,WAAWC,QAASR,IAC/B,wBAAMO,KAAK,iBAAiBC,QAASJ,IACrC,wBAAMG,KAAK,UAAUC,QAAQ,YAC7B,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,QAASN,EAAKG,aAAaI,SACxD,wBAAMF,KAAK,gBAAgBC,QAASR,IACpC,wBAAMO,KAAK,sBAAsBC,QAASJ,IACzCH,EAGN,C,oFCgDD,UA1Ec,SAAC,GAA2B,IAAzBS,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACbC,GAAMC,EAAAA,EAAAA,KAAND,EACR,EAA+BF,EAAKR,KAAKG,aAAjCL,EAAR,EAAQA,MAAOD,EAAf,EAAeA,YAETe,GADQJ,EAAKK,SACJL,EAAKM,WAEpB,OACE,gBAAC,IAAD,CAAQL,YAAaA,GACnB,gBAAC,IAAD,CAAKX,MAAOA,IAEZ,kDAA0BD,GAE1B,0BAAKa,EAAE,WACP,6BACE,6BACE,0BACE,sBAAIK,UAAU,mBAAoBL,EAAE,MAApC,IAA4CA,EAAE,OAC9C,sBAAIK,UAAU,mBAAoBL,EAAE,MAApC,IAA4CA,EAAE,OAC9C,sBAAIK,UAAU,mBAAoBL,EAAE,MAApC,IAA4CA,EAAE,SAGlD,6BACE,0BACE,sBAAIK,UAAU,mBAAoBP,EAAKQ,SAASC,YAChD,sBAAIF,UAAU,mBAAoBP,EAAKU,SAASD,YAChD,sBAAIF,UAAU,mBAAoBP,EAAKW,SAASF,eAKtD,0BAAKP,EAAE,eACP,0BACGE,EAAOQ,MAAMC,KAAI,SAACC,GAAD,OAChB,2BAASC,IAAKD,EAAKE,IACjB,gBAAC,KAAD,CAAMC,GAAE,UAAYH,EAAKI,MACvB,0BAAKJ,EAAKxB,QAEZ,iCAASwB,EAAKK,KAAd,OAAwBL,EAAKM,UAA7B,KAA0CN,EAAKO,KAA/C,MAAwDP,EAAKQ,OAL/C,KAUpB,mCAAWlB,EAAOK,YAClB,gBAAC,KAAD,CAAMQ,GAAG,YACNf,EAAE,cAGL,2BAGL,C","sources":["webpack://solange.dev/./src/components/seo.js","webpack://solange.dev/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, title, children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet title={title} titleTemplate={`%s | ${site.siteMetadata.title}`}>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta name=\"og:title\" content={title} />\r\n      <meta name=\"og:description\" content={metaDescription} />\r\n      <meta name=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata.author} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import * as React from 'react'\r\nimport { graphql } from \"gatsby\"\r\nimport { useTranslation} from \"react-i18next\"\r\nimport { LocalizedLink as Link } from \"gatsby-theme-i18n\"\r\n//import { StaticImage } from 'gatsby-plugin-image'\r\nimport Layout from '../components/layout'\r\nimport Seo from \"../components/seo\"\r\n\r\nconst Index = ({ data, pageContext }) => {\r\n  const { t } = useTranslation()\r\n  const { title, description } = data.site.siteMetadata\r\n  const posts = data.blogList\r\n  const events = data.eventList\r\n \r\n  return (\r\n    <Layout pageContext={pageContext}>\r\n      <Seo title={title} />\r\n\r\n      <p>Sol (Solange Gueiros) {description}</p>\r\n\r\n      <h2>{t(\"events\")}</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th className=\"TableTextCenter\" >{t(\"in\")} {t(\"en\")}</th>\r\n            <th className=\"TableTextCenter\" >{t(\"in\")} {t(\"es\")}</th>\r\n            <th className=\"TableTextCenter\" >{t(\"in\")} {t(\"pt\")}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td className=\"TableTextCenter\" >{data.eventsEN.totalCount}</td>\r\n            <td className=\"TableTextCenter\" >{data.eventsES.totalCount}</td>\r\n            <td className=\"TableTextCenter\" >{data.eventsPT.totalCount}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <h4>{t(\"lastEvents\")}</h4>\r\n      <ul>\r\n        {events.nodes.map((item) => (\r\n          <article key={item.id}>\r\n            <Link to={`/events${item.slug}`}>\r\n              <h4>{item.title}</h4>\r\n            </Link>\r\n            <small> {item.type} by {item.organizer}, {item.date} - {item.local}</small>\r\n          </article>\r\n        ))}\r\n      </ul>\r\n\r\n      <p>Total: {events.totalCount}</p>\r\n      <Link to=\"/events/\">\r\n        {t(\"allEvents\")}\r\n      </Link>\r\n\r\n      <br/>\r\n    </Layout>\r\n  )\r\n}\r\n/* Blog part - removed\r\n      <br/>\r\n      <h2>{t(\"blog\")}</h2>\r\n\r\n      <h4>{t(\"lastPosts\")}</h4>\r\n      <ul>\r\n        {\r\n          posts.nodes.map(({ childMdx: node }) => (\r\n            <article key={node.frontmatter.slug}>\r\n              <Link to={`/blog${node.frontmatter.slug}`}>\r\n                <h4>{node.frontmatter.title}</h4>\r\n              </Link>\r\n              <small>Posted: {node.frontmatter.date}</small>\r\n            </article>\r\n          ))\r\n        }\r\n      </ul>\r\n      <p>Total: {posts.totalCount}</p>\r\n      <Link to=\"/blog/\">\r\n        {t(\"allPosts\")}\r\n      </Link>\r\n*/\r\n\r\nexport default Index\r\n\r\nexport const query = graphql`\r\n  query($locale: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n      }\r\n    }\r\n\r\n    blogList: allFile(\r\n      filter: {\r\n        sourceInstanceName: { eq: \"blog\" }\r\n        childMdx: { fields: { locale: { eq: $locale } } }\r\n      },\r\n      limit: 2,\r\n      sort: {fields: childrenMdx___frontmatter___date, order: DESC}\r\n    ) {\r\n      totalCount\r\n      nodes {\r\n        childMdx {\r\n          frontmatter {\r\n            date(formatString: \"DD/MMM/YYYY\")\r\n            slug\r\n            title            \r\n          }\r\n          id\r\n        }\r\n      }\r\n    }\r\n    \r\n    eventList: allItem(\r\n      filter: {layout: {eq: \"event\"}, fields: {locale: {eq: $locale}}}\r\n      limit: 5,\r\n      sort: {fields: date, order: DESC}\r\n    ) {\r\n      totalCount\r\n      nodes {\r\n        date(formatString: \"DD MMMM, YYYY\")\r\n        id\r\n        local\r\n        organizer\r\n        slug\r\n        title\r\n        type\r\n      }\r\n    }    \r\n\r\n    postsEN: allFile(\r\n      filter: {\r\n        sourceInstanceName: { eq: \"blog\" }\r\n        childMdx: { fields: { locale: { eq: \"en\" } } }\r\n      } ) { \r\n      totalCount\r\n    }\r\n\r\n    postsES: allFile(\r\n      filter: {\r\n        sourceInstanceName: { eq: \"blog\" }\r\n        childMdx: { fields: { locale: { eq: \"es\" } } }\r\n      } ) { \r\n      totalCount\r\n    }\r\n\r\n    postsPT: allFile(\r\n      filter: {\r\n        sourceInstanceName: { eq: \"blog\" }\r\n        childMdx: { fields: { locale: { eq: \"pt\" } } }\r\n      } ) { \r\n      totalCount\r\n    }\r\n\r\n\r\n    eventsEN: allItem (filter: {\r\n      layout: {eq: \"event\"}\r\n      fields: {locale: {eq: \"en\"} }\r\n    }) {\r\n      totalCount\r\n    }  \r\n\r\n    eventsES: allItem (filter: {\r\n      layout: {eq: \"event\"}\r\n      fields: {locale: {eq: \"es\"} }\r\n    }) {\r\n      totalCount\r\n    }\r\n  \r\n    eventsPT: allItem (filter: {\r\n      layout: {eq: \"event\"}\r\n      fields: {locale: {eq: \"pt\"} }\r\n    }) {\r\n      totalCount\r\n    }    \r\n\r\n  }\r\n`"],"names":["description","title","children","site","useStaticQuery","metaDescription","siteMetadata","titleTemplate","name","content","author","data","pageContext","t","useTranslation","events","blogList","eventList","className","eventsEN","totalCount","eventsES","eventsPT","nodes","map","item","key","id","to","slug","type","organizer","date","local"],"sourceRoot":""}