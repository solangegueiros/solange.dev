{"version":3,"file":"component---src-pages-docs-js-f4a787453a8b72b511ab.js","mappings":"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","sources":["webpack://solange.dev/./src/pages/docs.js","webpack://solange.dev/./node_modules/gatsby-plugin-react-i18next/dist/useI18next.js","webpack://solange.dev/./src/utils/folderUtils.js","webpack://solange.dev/./node_modules/gatsby-plugin-react-i18next/dist/Link.js","webpack://solange.dev/./src/components/LanguageSwitcher.jsx","webpack://solange.dev/./src/images/icon.png","webpack://solange.dev/./src/components/Menu.jsx","webpack://solange.dev/./src/components/SidebarTree.jsx","webpack://solange.dev/./src/components/DocsSidebar.jsx","webpack://solange.dev/./src/components/BlogSidebar.jsx","webpack://solange.dev/./src/components/Sidebar.jsx","webpack://solange.dev/./src/components/Layout.jsx","webpack://solange.dev/./node_modules/gatsby-plugin-react-i18next/index.js","webpack://solange.dev/./src/hooks/use-site-metadata.jsx","webpack://solange.dev/./src/components/Seo.jsx","webpack://solange.dev/./node_modules/gatsby-plugin-react-i18next/dist/index.js"],"sourcesContent":["import React from \"react\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\nimport { Link, useI18next } from \"gatsby-plugin-react-i18next\";\r\n\r\nimport Layout from '../components/Layout'\r\nimport { SEO }  from \"../components/Seo\"\r\n// import { buildSidebarTree } from \"../utils/buildSidebarTree\";\r\nimport { groupDocsBySubfolder, formatFolderName } from \"../utils/folderUtils\";\r\n\r\nconst PageTitle = \"Docs\"\r\n\r\nexport const query = graphql`\r\n  query($language: String!) {\r\n    locales: allLocale(filter: { language: { eq: $language } }) {\r\n      edges {\r\n        node {\r\n          ns\r\n          data\r\n          language\r\n        }\r\n      }\r\n    }\r\n    docs: allMdx(\r\n      sort: { frontmatter: { order: ASC } }\r\n      filter: { \r\n        fields: {locale: {eq: $language} } \r\n        internal: {contentFilePath: {regex: \"/doc/\"}}\r\n      }\r\n    ) {\r\n        nodes {\r\n          id\r\n          frontmatter {            \r\n            title\r\n            slug\r\n            order\r\n          }\r\n          fields {\r\n            subfolder\r\n          }          \r\n        }\r\n      }\r\n    }\r\n  `\r\n\r\n\r\nconst DocsPage = ({ data, pageContext: { language }, location }) => {\r\n\r\n  const tree = groupDocsBySubfolder(data.docs.nodes);\r\n\r\n  // Separate top-level and foldered docs\r\n  const topLevelDocs = Object.entries(tree).filter(([_, v]) => !v.children);\r\n  const folderGroups = Object.entries(tree)\r\n  .filter(([_, v]) => v.children)\r\n  .sort(([a], [b]) => {\r\n    const aNum = parseInt(a.split(\"-\")[0], 10);\r\n    const bNum = parseInt(b.split(\"-\")[0], 10);\r\n    return aNum - bNum;\r\n  });\r\n  \r\n  return (\r\n    <Layout pageTitle={PageTitle} location={location}>\r\n      <p> Use the sidebar navigation</p>\r\n    </Layout>\r\n  )\r\n}\r\n\r\n      // <ul>\r\n      //   {/* Top-level docs first */}\r\n      //   {topLevelDocs.map(([_, doc]) => (\r\n      //     <li key={doc.slug}>\r\n      //       <Link to={`/docs/${doc.slug}`}>{doc.title}</Link>\r\n      //     </li>\r\n      //   ))}\r\n\r\n      //   {/* Then folder groups */}\r\n      //   {folderGroups.map(([folder, group]) => (\r\n      //     <li key={folder}>\r\n      //       <strong>{formatFolderName(folder)}</strong>\r\n      //       <ul>\r\n      //         {group.children.map(child => (\r\n      //           <li key={child.slug}>\r\n      //             <Link to={`/docs/${folder}/${child.slug}`}>{child.title}</Link>\r\n      //           </li>\r\n      //         ))}\r\n      //       </ul>\r\n      //     </li>\r\n      //   ))}\r\n      // </ul>\r\n\r\n\r\nexport default DocsPage;\r\n\r\nexport const Head = () => <SEO pageTitle={PageTitle} />\r\n\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports.useI18next = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _reactI18next = require(\"react-i18next\");\nvar _react = require(\"react\");\nvar _gatsby = require(\"gatsby\");\nvar _i18nextContext = require(\"./i18nextContext\");\nvar _types = require(\"./types\");\nvar useI18next = function useI18next(ns, options) {\n  var _useTranslation = (0, _reactI18next.useTranslation)(ns, options),\n    i18n = _useTranslation.i18n,\n    t = _useTranslation.t,\n    ready = _useTranslation.ready;\n  var context = (0, _react.useContext)(_i18nextContext.I18nextContext);\n  var routed = context.routed,\n    defaultLanguage = context.defaultLanguage,\n    generateDefaultLanguagePage = context.generateDefaultLanguagePage;\n  var getLanguagePath = function getLanguagePath(language) {\n    return generateDefaultLanguagePage || language !== defaultLanguage ? \"/\" + language : '';\n  };\n  var removePrefix = function removePrefix(pathname) {\n    var base = typeof __BASE_PATH__ !== \"undefined\" ? __BASE_PATH__ : __PATH_PREFIX__;\n    if (base && pathname.indexOf(base) === 0) {\n      pathname = pathname.slice(base.length);\n    }\n    return pathname;\n  };\n  var removeLocalePart = function removeLocalePart(pathname) {\n    if (!routed) return pathname;\n    var i = pathname.indexOf(\"/\", 1);\n    return pathname.substring(i);\n  };\n  var navigate = function navigate(to, options) {\n    var languagePath = getLanguagePath(context.language);\n    var link = routed ? \"\" + languagePath + to : \"\" + to;\n    return (0, _gatsby.navigate)(link, options);\n  };\n  var changeLanguage = function changeLanguage(language, to, options) {\n    var languagePath = getLanguagePath(language);\n    var pathname = to || removeLocalePart(removePrefix(window.location.pathname));\n    var link = \"\" + languagePath + pathname + window.location.search;\n    localStorage.setItem(_types.LANGUAGE_KEY, language);\n    return (0, _gatsby.navigate)(link, options);\n  };\n  return (0, _extends2.default)({}, context, {\n    i18n: i18n,\n    t: t,\n    ready: ready,\n    navigate: navigate,\n    changeLanguage: changeLanguage\n  });\n};\nexports.useI18next = useI18next;","function groupDocsBySubfolder(nodes) {\r\n  const tree = {};\r\n\r\n  nodes.forEach(node => {\r\n    const { slug, title } = node.frontmatter;\r\n    const subfolder = node.fields.subfolder;\r\n\r\n    if (!subfolder) {\r\n      tree[slug] = { title, slug };\r\n    } else {\r\n      if (!tree[subfolder]) {\r\n        tree[subfolder] = { children: [] };\r\n      }\r\n      tree[subfolder].children.push({ title, slug });\r\n    }\r\n  });\r\n\r\n  return tree;\r\n}\r\n\r\n\r\nfunction formatFolderName(name) {\r\n  return name.replace(/-/g, \" - \");\r\n}\r\n\r\nfunction getSlugFromPath(filePath, basePath) {\r\n  const parts = filePath.split(\"/docs/\")[1].split(\"/\");\r\n  const slugParts = parts.map(p => p.replace(/^\\d+-/, \"\").replace(/\\.mdx$/, \"\"));\r\n  return `${basePath}/${slugParts.join(\"/\")}`;\r\n}\r\n\r\n\r\nmodule.exports = {\r\n  groupDocsBySubfolder,\r\n  formatFolderName,\r\n  getSlugFromPath\r\n};\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports.Link = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _i18nextContext = require(\"./i18nextContext\");\nvar _gatsby = require(\"gatsby\");\nvar _types = require(\"./types\");\nvar _excluded = [\"language\", \"to\", \"onClick\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar Link = /*#__PURE__*/_react.default.forwardRef(function (_ref, ref) {\n  var language = _ref.language,\n    to = _ref.to,\n    _onClick = _ref.onClick,\n    rest = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);\n  var context = (0, _react.useContext)(_i18nextContext.I18nextContext);\n  var urlLanguage = language || context.language;\n  var getLanguagePath = function getLanguagePath(language) {\n    return context.generateDefaultLanguagePage || language !== context.defaultLanguage ? \"/\" + language : '';\n  };\n  var link = \"\" + getLanguagePath(urlLanguage) + to;\n  return (\n    /*#__PURE__*/\n    // @ts-ignore\n    _react.default.createElement(_gatsby.Link, (0, _extends2.default)({}, rest, {\n      to: link,\n      innerRef: ref,\n      hrefLang: urlLanguage,\n      onClick: function onClick(e) {\n        if (language) {\n          localStorage.setItem(_types.LANGUAGE_KEY, language);\n        }\n        if (_onClick) {\n          _onClick(e);\n        }\n      }\n    }))\n  );\n});\nexports.Link = Link;","// src/components/LanguageSwitcher.js\r\nimport React from 'react'\r\nimport { useI18next, useTranslation } from 'gatsby-plugin-react-i18next'\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\n\r\nconst FLAGS = {\r\n  en: \"/images/flags/EN.png\",\r\n  es: \"/images/flags/ES.png\",\r\n  pt: \"/images/flags/BR.png\",\r\n};\r\n\r\nconst LanguageSwitcher = () => {\r\n  const { languages, changeLanguage, language } = useI18next()\r\n  const { t } = useTranslation()\r\n  //console.log(\"\\n  languages\", JSON.stringify(languages, null, 2));\r\n  //console.log(\"\\n  language\", language);\r\n\r\n  //      <h3 className=\"language-title\">{t('language')} : {language}</h3>\r\n\r\n  return (\r\n    <div className=\"language-switcher\">\r\n      <div className=\"language-buttons\">\r\n        {languages.map(lang => (\r\n          <button\r\n            key={lang}\r\n            onClick={() => changeLanguage(lang)}\r\n            className={`language-button ${lang === language ? 'language-button--active' : ''}`}\r\n          >\r\n            <img\r\n              src={FLAGS[lang]}\r\n              alt={lang}\r\n              className=\"language-flag\"\r\n              title={lang.toUpperCase()}\r\n            />\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LanguageSwitcher\r\n","export default __webpack_public_path__ + \"static/icon-98bed379b4ec2d8879f8d18db3a2c0c3.png\";","import * as React from 'react'\r\nimport { Link, useStaticQuery, graphql } from 'gatsby'\r\nimport { useTranslation } from 'gatsby-plugin-react-i18next'\r\nimport LanguageSwitcher from './LanguageSwitcher'\r\nimport icon from '../images/icon.png'\r\n\r\nconst Menu = () => {\r\n  const { t } = useTranslation()\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  //console.log(\"Layout data \\n\", JSON.stringify(data, null, 2));    \r\n  \r\n  return (\r\n      <div className=\"menu\">\r\n        <Link to=\"/\" className=\"menu-title\">\r\n          <img src={icon} alt=\"Solange.Dev\" className=\"logoIcon\" />\r\n          {data.site.siteMetadata.title }\r\n        </Link>         \r\n        <nav>\r\n          <ul className=\"menu-links\">\r\n              <li className=\"menu-link-item\">\r\n                <Link to=\"/\" className=\"nav-link-text\">\r\n                    {t('menu.home')}\r\n                </Link>\r\n              </li>\r\n              <li className=\"menu-link-item\">\r\n                <Link to=\"/events\" className=\"nav-link-text\">\r\n                    {t('menu.events')}\r\n                </Link>\r\n              </li>\r\n              <li className=\"menu-link-item\">\r\n                <Link to=\"/projects\" className=\"nav-link-text\">\r\n                    {t('menu.projects')}\r\n                </Link>\r\n              </li>\r\n              <li className=\"menu-link-item\">\r\n                <Link to=\"/about\" className=\"nav-link-text\">\r\n                    {t('menu.about')}\r\n                </Link>\r\n              </li>\r\n          </ul>\r\n        </nav>\r\n        <div>\r\n          <LanguageSwitcher />\r\n        </div>        \r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default Menu\r\n\r\n  /*\r\n              <li className=\"menu-link-item\">\r\n                <Link to=\"/blog\" className=\"nav-link-text\">\r\n                    {t('menu.blog')}\r\n                </Link>\r\n              </li>\r\n              <li className=\"menu-link-item\">\r\n                <Link to=\"/docs\" className=\"nav-link-text\">\r\n                    {t('menu.docs')}\r\n                </Link>\r\n              </li>\r\n\r\n  */","import React, { useState } from \"react\";\r\nimport { Link, useI18next, useTranslation } from 'gatsby-plugin-react-i18next'\r\nimport { useSidebar } from \"../context/SidebarContext\";\r\nimport { groupDocsBySubfolder, formatFolderName } from \"../utils/folderUtils\";\r\n\r\n\r\nconst SidebarTree = ({ nodes, basePath = \"/docs\" }) => {\r\n  const { t } = useTranslation()\r\n  const { language } = useI18next()\r\n  //console.log(`language`, language)\r\n\r\n  const { openFolders, toggleFolder } = useSidebar();\r\n \r\n\r\n  //const docsByLanguage = nodes.filter(doc => doc.fields.locale === language);\r\n  //console.log(\"docsByLanguage \\n\", JSON.stringify(docsByLanguage, null, 2));\r\n  const tree = groupDocsBySubfolder(nodes);   \r\n  //console.log(\"tree \\n\", JSON.stringify(tree, null, 2));\r\n  \r\n\r\n  // Separate top-level and foldered docs\r\n  const topLevelDocs = Object.entries(tree).filter(([_, v]) => !v.children);\r\n  const folderGroups = Object.entries(tree)\r\n  .filter(([_, v]) => v.children)\r\n  .sort(([a], [b]) => parseInt(a) - parseInt(b));\r\n  // console.log(\"\\n tree \\n\", JSON.stringify(tree, null, 2));\r\n  // console.log(\"\\n topLevelDocs \\n\", JSON.stringify(topLevelDocs, null, 2));\r\n  // console.log(\"\\n folderGroups \\n\", JSON.stringify(folderGroups, null, 2));\r\n\r\n\r\n  return (\r\n    <ul className=\"sidebar__list\">\r\n      {/* Top-level docs first */}\r\n      {topLevelDocs.map(([_, doc]) => (\r\n        <li key={doc.slug}>\r\n          <Link to={`${basePath}/${doc.slug}`} className=\"sidebar__link\">\r\n            {doc.title}\r\n          </Link>\r\n        </li>\r\n      ))}\r\n\r\n      {/* Then folder groups with toggle */}\r\n      {folderGroups.map(([folder, group]) => {\r\n        const isOpen = openFolders[folder];\r\n        return (\r\n          <li key={folder}>\r\n            <button\r\n              onClick={() => toggleFolder(folder)}\r\n              className=\"sidebar__folder-toggle\"\r\n            >\r\n              {isOpen ? \"▼\" : \"►\"} {formatFolderName(folder)}\r\n            </button>\r\n            {isOpen && (\r\n              <ul className=\"sidebar__list\">\r\n                {group.children.map(child => (\r\n                  <li key={child.slug}>\r\n                    <Link to={`${basePath}/${folder}/${child.slug}`} className=\"sidebar__link\">\r\n                      {child.title}\r\n                    </Link>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SidebarTree;\r\n","import React from 'react'\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\nimport { Link, useI18next, useTranslation } from 'gatsby-plugin-react-i18next'\r\n\r\nimport SidebarTree from './SidebarTree'\r\n\r\nconst DocsSidebar = () => {\r\n  const { t } = useTranslation()\r\n  const { language } = useI18next()\r\n  //console.log(`language`, language)\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      docs: allMdx(\r\n        sort: { frontmatter: { order: ASC } }\r\n        filter: {           \r\n          internal: {contentFilePath: {regex: \"/docs/\"}}\r\n        }\r\n      ) {\r\n          nodes {\r\n            id\r\n            frontmatter {            \r\n              slug\r\n              title\r\n              order\r\n            }\r\n            fields {\r\n              locale\r\n              subfolder\r\n            }             \r\n          }\r\n        }\r\n    }\r\n  `)\r\n  //console.log(\"docs \\n\", JSON.stringify(data.docs, null, 2));  \r\n  const { nodes } = data.docs;  \r\n  const nodesByLanguage = nodes.filter(node => node.fields.locale === language);\r\n  //console.log(\"docsByLanguage \\n\", JSON.stringify(docsByLanguage, null, 2));\r\n\r\n  return (\r\n    <aside className=\"sidebar\">\r\n      \r\n      <br/>\r\n      \r\n      <h2 className=\"sidebar__title\">{t('docs')}</h2>\r\n      <nav className=\"sidebar__nav\">\r\n          <SidebarTree nodes={nodesByLanguage}  basePath=\"/docs\" />\r\n      </nav>\r\n    </aside>\r\n  )  \r\n\r\n}\r\n\r\nexport default DocsSidebar","import React from 'react'\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\nimport { Link, useI18next, useTranslation } from 'gatsby-plugin-react-i18next'\r\n\r\nimport SidebarTree from './SidebarTree'\r\n\r\nconst BlogSidebar = () => {\r\n  const { t } = useTranslation()\r\n  const { language } = useI18next()\r\n  //console.log(`language`, language)  \r\n\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      blogs: allMdx(\r\n        sort: { frontmatter: { date: DESC } }\r\n        filter: { \r\n          internal: {contentFilePath: {regex: \"/blog/\"}}\r\n        }\r\n      ) {\r\n          nodes {\r\n            id\r\n            frontmatter {\r\n              slug\r\n              title\r\n              date(formatString: \"MMMM DD, YYYY\")\r\n            }\r\n            fields {\r\n              locale\r\n              subfolder\r\n            }              \r\n          }\r\n        }\r\n    }\r\n  `)\r\n  //console.log(\"blogs \\n\", JSON.stringify(data.blogs, null, 2));  \r\n  const { nodes } = data.blogs; \r\n  const nodesByLanguage = nodes.filter(node => node.fields.locale === language);\r\n  //console.log(\"docsByLanguage \\n\", JSON.stringify(docsByLanguage, null, 2));\r\n\r\n  return (\r\n    <aside className=\"sidebar\">\r\n      \r\n      <br/>\r\n      \r\n      <h2 className=\"sidebar__title\">{t('blog')}</h2>\r\n      <nav className=\"sidebar__nav\">\r\n          <SidebarTree nodes={nodesByLanguage}  basePath=\"/blog\" />\r\n      </nav>\r\n    </aside>\r\n  ) \r\n\r\n}\r\n\r\nexport default BlogSidebar\r\n","// src/components/Sidebar.jsx\r\nimport * as React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport { useStaticQuery } from 'gatsby'\r\nimport { Link, useI18next, useTranslation } from 'gatsby-plugin-react-i18next'\r\n\r\nimport SidebarTree from './SidebarTree'\r\nimport DocsSidebar from './DocsSidebar'\r\nimport BlogSidebar from './BlogSidebar'\r\n\r\nconst Sidebar = ({ location }) => {\r\n  const { t } = useTranslation()\r\n  const { language } = useI18next()\r\n  //console.log(`language`, language)\r\n\r\n\r\n  //console.log(\"Sidebar location\\n\", JSON.stringify(location, null, 2));\r\n  const path = location?.pathname || ''\r\n  const isDocs = path.includes('/docs/')\r\n  const isBlog = path.includes('/blog/')\r\n  //const isDocs = path.match(/^\\/(?:[a-z]{2}\\/)?docs(?:\\/|$)/)\r\n  //console.log(`isDocs: ${isDocs} \\t isBlog: ${isBlog}`)\r\n\r\n/*\r\n          {isDocs && <DocsSidebar />}\r\n          {isBlog && <BlogSidebar />}\r\n\r\n*/\r\n\r\n  return (\r\n    <>\r\n      {isDocs && <DocsSidebar />}\r\n      {isBlog && <BlogSidebar />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Sidebar","//src/components/Layout.jsx\r\nimport React, { useState } from 'react'\r\n\r\nimport Menu from './Menu'\r\nimport Sidebar from './Sidebar'\r\n\r\n\r\nconst Layout = ({ children, pageTitle, location, data }) => {\r\n  //console.log(\"Layout location\\n\", JSON.stringify(location, null, 2));\r\n  \r\n  const [isSidebarOpen, setSidebarOpen] = useState(false)\r\n  const toggleSidebar = () => setSidebarOpen(!isSidebarOpen)\r\n\r\n  //<h1 >{t(pageTitle)}</h1>\r\n  return (\r\n    <div className=\"layout\">\r\n      <Menu />\r\n      <div className=\"layout-body\">\r\n        <button className=\"sidebar-toggle\" onClick={toggleSidebar}>\r\n          ☰\r\n        </button>\r\n        <Sidebar className={isSidebarOpen ? 'open' : ''} location={location} />\r\n\r\n        <main className=\"main-content\">          \r\n          <h1>{pageTitle}</h1>\r\n          {children}\r\n        </main>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","module.exports = require('./dist');\n","import { graphql, useStaticQuery } from \"gatsby\"\r\n\r\nexport const useSiteMetadata = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          description\r\n          twitterUsername\r\n          image\r\n          siteUrl\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  //console.log(\"siteMetadata \\n\", data.siteMetadata);\r\n\r\n  return data.site.siteMetadata\r\n}","import React from \"react\"\r\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\"\r\n\r\n//Named export\r\nexport const SEO = ({ pageTitle, pageDescription, pathname, children }) => {\r\n  const { title: defaultTitle, description: defaultDescription, image, siteUrl, twitterUsername } = useSiteMetadata()\r\n\r\n  const seo = {\r\n    title: pageTitle ? `${pageTitle} | ${defaultTitle}` : defaultTitle,\r\n    description: pageDescription || defaultDescription,\r\n    image: `${siteUrl}${image}`,\r\n    url: `${siteUrl}${pathname || ``}`,\r\n    twitterUsername,\r\n  }\r\n  console.log(\"SEO data:\", JSON.stringify(seo, null, 2))\r\n\r\n  return (\r\n    <>\r\n      <title>{seo.title}</title>\r\n      <meta name=\"description\" content={seo.description} />\r\n      <meta name=\"image\" content={seo.image} />\r\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n      <meta name=\"twitter:title\" content={seo.title} />\r\n      <meta name=\"twitter:url\" content={seo.url} />\r\n      <meta name=\"twitter:description\" content={seo.description} />\r\n      <meta name=\"twitter:image\" content={seo.image} />\r\n      <meta name=\"twitter:creator\" content={seo.twitterUsername} />\r\n      <link rel=\"icon\" type=\"image/png\" href={seo.image} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n","\"use strict\";\n\nexports.__esModule = true;\nvar _reactI18next = require(\"react-i18next\");\nObject.keys(_reactI18next).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _reactI18next[key]) return;\n  exports[key] = _reactI18next[key];\n});\nvar _i18nextContext = require(\"./i18nextContext\");\nObject.keys(_i18nextContext).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _i18nextContext[key]) return;\n  exports[key] = _i18nextContext[key];\n});\nvar _useI18next = require(\"./useI18next\");\nObject.keys(_useI18next).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _useI18next[key]) return;\n  exports[key] = _useI18next[key];\n});\nvar _Link = require(\"./Link\");\nObject.keys(_Link).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _Link[key]) return;\n  exports[key] = _Link[key];\n});"],"names":["PageTitle","_ref","data","pageContext","language","location","tree","groupDocsBySubfolder","docs","nodes","Object","entries","filter","_ref2","_","v","children","_ref3","sort","_ref4","_ref5","a","b","parseInt","split","React","Layout","pageTitle","Head","SEO","_interopRequireDefault","require","exports","__esModule","useI18next","_extends2","_reactI18next","_react","_gatsby","_i18nextContext","_types","ns","options","_useTranslation","useTranslation","i18n","t","ready","context","useContext","I18nextContext","routed","defaultLanguage","generateDefaultLanguagePage","getLanguagePath","default","navigate","to","languagePath","link","changeLanguage","pathname","i","indexOf","substring","removeLocalePart","window","search","localStorage","setItem","LANGUAGE_KEY","module","forEach","node","slug","title","frontmatter","subfolder","fields","push","formatFolderName","name","replace","getSlugFromPath","filePath","basePath","map","p","join","Link","_objectWithoutPropertiesLoose2","obj","nodeInterop","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","_excluded","WeakMap","cacheBabelInterop","cacheNodeInterop","forwardRef","ref","_onClick","onClick","rest","urlLanguage","createElement","innerRef","hrefLang","e","FLAGS","en","es","pt","LanguageSwitcher","languages","className","lang","src","alt","toUpperCase","Menu","useStaticQuery","icon","site","siteMetadata","openFolders","toggleFolder","useSidebar","topLevelDocs","folderGroups","_ref6","doc","_ref7","folder","group","isOpen","child","DocsSidebar","nodesByLanguage","locale","SidebarTree","BlogSidebar","blogs","path","isDocs","includes","isBlog","isSidebarOpen","setSidebarOpen","useState","toggleSidebar","Sidebar","pageDescription","defaultTitle","description","defaultDescription","image","siteUrl","twitterUsername","seo","url","console","log","JSON","stringify","content","rel","type","href","keys","_useI18next","_Link"],"sourceRoot":""}